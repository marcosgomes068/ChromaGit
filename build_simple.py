#!/usr/bin/env python3
"""
Build simples do ChromaGit com favicon
"""

import subprocess
import sys
from pathlib import Path

def build_with_icon():
    """Compila o main.py com √≠cone do favicon"""
    print("üî® Compilando ChromaGit com √≠cone...")
    
    # Verificar se favicon existe
    favicon_path = Path("favicon.ico").resolve()
    
    if favicon_path.exists():
        print(f"‚úÖ Favicon encontrado: {favicon_path}")
        icon_param = ["--icon", str(favicon_path)]
    else:
        print("‚ö†Ô∏è Favicon n√£o encontrado, usando √≠cone padr√£o")
        icon_param = []
    
    # Comando de compila√ß√£o
    cmd = [
        "python", "-m", "PyInstaller",
        "--onefile",
        "--name", "ChromaGit",
        "main.py",
        "--distpath", "obj",
        "--workpath", "obj/build",
        "--specpath", "obj",
        "--clean"
    ] + icon_param
    
    print(f"Executando: {' '.join(cmd)}")
    
    try:
        result = subprocess.run(cmd, check=True)
        print("‚úÖ Build conclu√≠do com sucesso!")
        print("üìÅ Execut√°vel dispon√≠vel em: obj/ChromaGit.exe")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro no build: {e}")
        return False

def build_desktop_app():
    """Compila a aplica√ß√£o desktop"""
    print("üñ•Ô∏è Compilando aplica√ß√£o desktop...")
    
    favicon_path = Path("favicon.ico").resolve()
    
    if favicon_path.exists():
        icon_param = ["--icon", str(favicon_path)]
    else:
        icon_param = []
    
    cmd = [
        "python", "-m", "PyInstaller",
        "--onefile",
        "--windowed",  # Remove console window
        "--name", "ChromaGit-Desktop",
        "chromagit_desktop.py",
        "--distpath", "obj",
        "--workpath", "obj/build_desktop",
        "--specpath", "obj",
        "--clean"
    ] + icon_param
    
    print(f"Executando: {' '.join(cmd)}")
    
    try:
        result = subprocess.run(cmd, check=True)
        print("‚úÖ Aplica√ß√£o desktop compilada com sucesso!")
        print("üìÅ Aplica√ß√£o dispon√≠vel em: obj/ChromaGit-Desktop.exe")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro no build da aplica√ß√£o desktop: {e}")
        return False

def build_without_icon():
    """Compila sem √≠cone se o favicon n√£o funcionar"""
    print("üî® Compilando ChromaGit sem √≠cone...")
    
    cmd = [
        "python", "-m", "PyInstaller",
        "--onefile",
        "--name", "ChromaGit",
        "main.py",
        "--distpath", "obj",
        "--workpath", "obj/build",
        "--specpath", "obj",
        "--clean"
    ]
    
    print(f"Executando: {' '.join(cmd)}")
    
    try:
        result = subprocess.run(cmd, check=True)
        print("‚úÖ Build sem √≠cone conclu√≠do com sucesso!")
        print("üìÅ Execut√°vel dispon√≠vel em: obj/ChromaGit.exe")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro no build sem √≠cone: {e}")
        return False

if __name__ == "__main__":
    print("üåà ChromaGit Build System")
    print("=" * 40)
    
    # Tentar build com √≠cone primeiro
    success_cli = build_with_icon()
    
    # Se falhar, tentar sem √≠cone
    if not success_cli:
        print("\n‚ö†Ô∏è Build com √≠cone falhou, tentando sem √≠cone...")
        success_cli = build_without_icon()
    
    # Build da aplica√ß√£o desktop
    success_desktop = build_desktop_app()
    
    # Se falhar, tentar sem √≠cone
    if not success_desktop:
        print("\n‚ö†Ô∏è Build desktop com √≠cone falhou, tentando sem √≠cone...")
        cmd = [
            "python", "-m", "PyInstaller",
            "--onefile",
            "--windowed",
            "--name", "ChromaGit-Desktop",
            "chromagit_desktop.py",
            "--distpath", "obj",
            "--workpath", "obj/build_desktop",
            "--specpath", "obj",
            "--clean"
        ]
        try:
            result = subprocess.run(cmd, check=True)
            success_desktop = True
            print("‚úÖ Aplica√ß√£o desktop sem √≠cone compilada com sucesso!")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå Erro no build desktop sem √≠cone: {e}")
    
    print("\n" + "=" * 40)
    if success_cli and success_desktop:
        print("üéâ Todos os builds conclu√≠dos com sucesso!")
    elif success_cli:
        print("‚úÖ Build CLI conclu√≠do, ‚ùå Build desktop falhou")
    elif success_desktop:
        print("‚ùå Build CLI falhou, ‚úÖ Build desktop conclu√≠do")
    else:
        print("‚ùå Todos os builds falharam")
        sys.exit(1)
